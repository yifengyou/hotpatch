diff -Nupr src.orig/fs/nfsd/export.c src/fs/nfsd/export.c
--- src.orig/fs/nfsd/export.c	2020-09-03 11:48:30.477726060 -0400
+++ src/fs/nfsd/export.c	2020-09-03 11:49:03.743830132 -0400
@@ -1184,7 +1184,13 @@ static void exp_flags(struct seq_file *m
 	}
 }
 
+extern char *kpatch_string(void);
+
+#ifdef CONFIG_PPC64
+static int __attribute__((optimize("-fno-optimize-sibling-calls"))) e_show(struct seq_file *m, void *p)
+#else
 static int e_show(struct seq_file *m, void *p)
+#endif
 {
 	struct cache_head *cp = p;
 	struct svc_export *exp = container_of(cp, struct svc_export, h);
@@ -1193,6 +1199,7 @@ static int e_show(struct seq_file *m, vo
 	if (p == SEQ_START_TOKEN) {
 		seq_puts(m, "# Version 1.1\n");
 		seq_puts(m, "# Path Client(Flags) # IPs\n");
+		seq_puts(m, kpatch_string());
 		return 0;
 	}
 
diff -Nupr src.orig/net/netlink/af_netlink.c src/net/netlink/af_netlink.c
--- src.orig/net/netlink/af_netlink.c	2020-09-03 11:48:30.802727077 -0400
+++ src/net/netlink/af_netlink.c	2020-09-03 11:49:03.743830132 -0400
@@ -2573,4 +2573,9 @@ panic:
 	panic("netlink_init: Cannot allocate nl_table\n");
 }
 
+char *kpatch_string(void)
+{
+	return "# kpatch\n";
+}
+
 core_initcall(netlink_proto_init);
